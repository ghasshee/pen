
-- +---------+ --
-- | DisAsm  | --
-- +---------+ --

00000000:   PUSH1 "80"
00000002:   PUSH1 "40"
00000004:   MSTORE
00000005:   CALLVALUE
00000006:   DUP1
00000007:   ISZERO
00000008:   PUSH1 "0E"
0000000A:   JUMPI
0000000B:   PUSH0
0000000C:   PUSH0
0000000D:   REVERT
0000000E:   JUMPDEST "E"
0000000F:   POP
00000010:   PUSH2 "01A1"
00000013:   DUP1
00000014:   PUSH2 "001C"
00000017:   PUSH0
00000018:   CODECOPY
00000019:   PUSH0
0000001A:   RETURN
0000001B:   INVALID
// RUNTIME
00000000:   PUSH1 "80"
00000002:   PUSH1 "40"
00000004:   MSTORE
00000005:   CALLVALUE
00000006:   DUP1
00000007:   ISZERO
00000008:   PUSH2 "000F"
0000000B:   JUMPI
0000000C:   PUSH0
0000000D:   PUSH0
0000000E:   REVERT
0000000F:   JUMPDEST "F"
00000010:   POP
00000011:   PUSH1 "04"
00000013:   CALLDATASIZE
00000014:   LT
00000015:   PUSH2 "0034"
00000018:   JUMPI
00000019:   PUSH0
0000001A:   CALLDATALOAD
0000001B:   PUSH1 "E0"
0000001D:   SHR
0000001E:   DUP1
0000001F:   PUSH4 "165C4A16"
00000024:   EQ
00000025:   PUSH2 "0038"
00000028:   JUMPI
00000029:   DUP1
0000002A:   PUSH4 "C04F01FC"
0000002F:   EQ
00000030:   PUSH2 "005D"
00000033:   JUMPI
00000034:   JUMPDEST "34"
00000035:   PUSH0
00000036:   PUSH0
00000037:   REVERT
00000038:   JUMPDEST "38"
00000039:   PUSH2 "004B"
0000003C:   PUSH2 "0046"
0000003F:   CALLDATASIZE
00000040:   PUSH1 "04"
00000042:   PUSH2 "0134"
00000045:   JUMP
00000046:   JUMPDEST "46"
00000047:   PUSH2 "0070"
0000004A:   JUMP
0000004B:   JUMPDEST "4B"
0000004C:   PUSH1 "40"
0000004E:   MLOAD
0000004F:   SWAP1
00000050:   DUP2
00000051:   MSTORE
00000052:   PUSH1 "20"
00000054:   ADD
00000055:   PUSH1 "40"
00000057:   MLOAD
00000058:   DUP1
00000059:   SWAP2
0000005A:   SUB
0000005B:   SWAP1
0000005C:   RETURN
0000005D:   JUMPDEST "5D"
0000005E:   PUSH2 "004B"
00000061:   PUSH2 "006B"
00000064:   CALLDATASIZE
00000065:   PUSH1 "04"
00000067:   PUSH2 "0134"
0000006A:   JUMP
0000006B:   JUMPDEST "6B"
0000006C:   PUSH2 "00F3"
0000006F:   JUMP
00000070:   JUMPDEST "70"
00000071:   PUSH1 "40"
00000073:   MLOAD
00000074:   PUSH4 "32292B27"
00000079:   PUSH1 "E2"
0000007B:   SHL
0000007C:   DUP2
0000007D:   MSTORE
0000007E:   PUSH1 "04"
00000080:   DUP2
00000081:   ADD
00000082:   DUP4
00000083:   SWAP1
00000084:   MSTORE
00000085:   PUSH1 "24"
00000087:   DUP2
00000088:   ADD
00000089:   DUP3
0000008A:   SWAP1
0000008B:   MSTORE
0000008C:   PUSH0
0000008D:   SWAP1
0000008E:   PUSH20 "__$1F0C349BDE6EBFCAE8B9C6F081C0EA69B5$__"
000000A3:   SWAP1
000000A4:   PUSH4 "C8A4AC9C"
000000A9:   SWAP1
000000AA:   PUSH1 "44"
000000AC:   ADD
000000AD:   JUMPDEST "AD"
000000AE:   PUSH1 "20"
000000B0:   PUSH1 "40"
000000B2:   MLOAD
000000B3:   DUP1
000000B4:   DUP4
000000B5:   SUB
000000B6:   DUP2
000000B7:   DUP7
000000B8:   GAS
000000B9:   DELEGATECALL
000000BA:   ISZERO
000000BB:   DUP1
000000BC:   ISZERO
000000BD:   PUSH2 "00C8"
000000C0:   JUMPI
000000C1:   RETURNDATASIZE
000000C2:   PUSH0
000000C3:   PUSH0
000000C4:   RETURNDATACOPY
000000C5:   RETURNDATASIZE
000000C6:   PUSH0
000000C7:   REVERT
000000C8:   JUMPDEST "C8"
000000C9:   POP
000000CA:   POP
000000CB:   POP
000000CC:   POP
000000CD:   PUSH1 "40"
000000CF:   MLOAD
000000D0:   RETURNDATASIZE
000000D1:   PUSH1 "1F"
000000D3:   NOT
000000D4:   PUSH1 "1F"
000000D6:   DUP3
000000D7:   ADD
000000D8:   AND
000000D9:   DUP3
000000DA:   ADD
000000DB:   DUP1
000000DC:   PUSH1 "40"
000000DE:   MSTORE
000000DF:   POP
000000E0:   DUP2
000000E1:   ADD
000000E2:   SWAP1
000000E3:   PUSH2 "00EC"
000000E6:   SWAP2
000000E7:   SWAP1
000000E8:   PUSH2 "0154"
000000EB:   JUMP
000000EC:   JUMPDEST "EC"
000000ED:   SWAP4
000000EE:   SWAP3
000000EF:   POP
000000F0:   POP
000000F1:   POP
000000F2:   JUMP
000000F3:   JUMPDEST "F3"
000000F4:   PUSH1 "40"
000000F6:   MLOAD
000000F7:   PUSH4 "2E4C697F"
000000FC:   PUSH1 "E0"
000000FE:   SHL
000000FF:   DUP2
00000100:   MSTORE
00000101:   PUSH1 "04"
00000103:   DUP2
00000104:   ADD
00000105:   DUP4
00000106:   SWAP1
00000107:   MSTORE
00000108:   PUSH1 "24"
0000010A:   DUP2
0000010B:   ADD
0000010C:   DUP3
0000010D:   SWAP1
0000010E:   MSTORE
0000010F:   PUSH0
00000110:   SWAP1
00000111:   PUSH20 "__$1F0C349BDE6EBFCAE8B9C6F081C0EA69B5$__"
00000126:   SWAP1
00000127:   PUSH4 "2E4C697F"
0000012C:   SWAP1
0000012D:   PUSH1 "44"
0000012F:   ADD
00000130:   PUSH2 "00AD"
00000133:   JUMP
00000134:   JUMPDEST "134"
00000135:   PUSH0
00000136:   PUSH0
00000137:   PUSH1 "40"
00000139:   DUP4
0000013A:   DUP6
0000013B:   SUB
0000013C:   SLT
0000013D:   ISZERO
0000013E:   PUSH2 "0145"
00000141:   JUMPI
00000142:   PUSH0
00000143:   PUSH0
00000144:   REVERT
00000145:   JUMPDEST "145"
00000146:   POP
00000147:   POP
00000148:   DUP1
00000149:   CALLDATALOAD
0000014A:   SWAP3
0000014B:   PUSH1 "20"
0000014D:   SWAP1
0000014E:   SWAP2
0000014F:   ADD
00000150:   CALLDATALOAD
00000151:   SWAP2
00000152:   POP
00000153:   JUMP
00000154:   JUMPDEST "154"
00000155:   PUSH0
00000156:   PUSH1 "20"
00000158:   DUP3
00000159:   DUP5
0000015A:   SUB
0000015B:   SLT
0000015C:   ISZERO
0000015D:   PUSH2 "0164"
00000160:   JUMPI
00000161:   PUSH0
00000162:   PUSH0
00000163:   REVERT
00000164:   JUMPDEST "164"
00000165:   POP
00000166:   MLOAD
00000167:   SWAP2
00000168:   SWAP1
00000169:   POP
0000016A:   JUMP
0000016B:   INVALID
// IPFS/VER
00000000:   INFO "A2"
00000001:   INFO "64"
00000002:   INFO "ipfs5822"
00000003:   INFO "12208CB86D445EA9A119AA60D3747DE2EC6B827261D451D51E9FDF712A565C0574FE"
00000004:   INFO "64"
00000005:   INFO "solc43"
00000006:   INFO "00081C"
00000007:   INFO "00"
00000008:   INFO "33"
00000009:   INVALID
// IPFS/VER
00000000:   PUSH2 "011E"
00000003:   PUSH2 "0034"
00000006:   PUSH1 "0B"
00000008:   DUP3
00000009:   DUP3
0000000A:   DUP3
0000000B:   CODECOPY
0000000C:   DUP1
0000000D:   MLOAD
0000000E:   PUSH0
0000000F:   BYTE
00000010:   PUSH1 "73"
00000012:   EQ
00000013:   PUSH1 "28"
00000015:   JUMPI
00000016:   PUSH4 "4E487B71"
0000001B:   PUSH1 "E0"
0000001D:   SHL
0000001E:   PUSH0
0000001F:   MSTORE
00000020:   PUSH0
00000021:   PUSH1 "04"
00000023:   MSTORE
00000024:   PUSH1 "24"
00000026:   PUSH0
00000027:   REVERT
00000028:   JUMPDEST "28"
00000029:   ADDRESS
0000002A:   PUSH0
0000002B:   MSTORE
0000002C:   PUSH1 "73"
0000002E:   DUP2
0000002F:   MSTORE8
00000030:   DUP3
00000031:   DUP2
00000032:   RETURN
00000033:   INVALID
// IPFS/VER
00000000:   PUSH20 "0000000000000000000000000000000000000000"
00000015:   ADDRESS
00000016:   EQ
00000017:   PUSH1 "80"
00000019:   PUSH1 "40"
0000001B:   MSTORE
0000001C:   PUSH1 "04"
0000001E:   CALLDATASIZE
0000001F:   LT
00000020:   PUSH1 "3C"
00000022:   JUMPI
00000023:   PUSH0
00000024:   CALLDATALOAD
00000025:   PUSH1 "E0"
00000027:   SHR
00000028:   DUP1
00000029:   PUSH4 "2E4C697F"
0000002E:   EQ
0000002F:   PUSH1 "40"
00000031:   JUMPI
00000032:   DUP1
00000033:   PUSH4 "C8A4AC9C"
00000038:   EQ
00000039:   PUSH1 "61"
0000003B:   JUMPI
0000003C:   JUMPDEST "3C"
0000003D:   PUSH0
0000003E:   PUSH0
0000003F:   REVERT
00000040:   JUMPDEST "40"
00000041:   PUSH1 "4F"
00000043:   PUSH1 "4B"
00000045:   CALLDATASIZE
00000046:   PUSH1 "04"
00000048:   PUSH1 "A7"
0000004A:   JUMP
0000004B:   JUMPDEST "4B"
0000004C:   PUSH1 "70"
0000004E:   JUMP
0000004F:   JUMPDEST "4F"
00000050:   PUSH1 "40"
00000052:   MLOAD
00000053:   SWAP1
00000054:   DUP2
00000055:   MSTORE
00000056:   PUSH1 "20"
00000058:   ADD
00000059:   PUSH1 "40"
0000005B:   MLOAD
0000005C:   DUP1
0000005D:   SWAP2
0000005E:   SUB
0000005F:   SWAP1
00000060:   RETURN
00000061:   JUMPDEST "61"
00000062:   PUSH1 "4F"
00000064:   PUSH1 "6C"
00000066:   CALLDATASIZE
00000067:   PUSH1 "04"
00000069:   PUSH1 "A7"
0000006B:   JUMP
0000006C:   JUMPDEST "6C"
0000006D:   PUSH1 "97"
0000006F:   JUMP
00000070:   JUMPDEST "70"
00000071:   PUSH0
00000072:   PUSH1 "01"
00000074:   DUP2
00000075:   JUMPDEST "75"
00000076:   DUP4
00000077:   DUP2
00000078:   LT
00000079:   ISZERO
0000007A:   PUSH1 "8D"
0000007C:   JUMPI
0000007D:   PUSH1 "84"
0000007F:   DUP6
00000080:   DUP4
00000081:   PUSH1 "C6"
00000083:   JUMP
00000084:   JUMPDEST "84"
00000085:   SWAP2
00000086:   POP
00000087:   PUSH1 "01"
00000089:   ADD
0000008A:   PUSH1 "75"
0000008C:   JUMP
0000008D:   JUMPDEST "8D"
0000008E:   POP
0000008F:   SWAP1
00000090:   POP
00000091:   JUMPDEST "91"
00000092:   SWAP3
00000093:   SWAP2
00000094:   POP
00000095:   POP
00000096:   JUMP
00000097:   JUMPDEST "97"
00000098:   PUSH0
00000099:   PUSH1 "A0"
0000009B:   DUP3
0000009C:   DUP5
0000009D:   PUSH1 "C6"
0000009F:   JUMP
000000A0:   JUMPDEST "A0"
000000A1:   SWAP4
000000A2:   SWAP3
000000A3:   POP
000000A4:   POP
000000A5:   POP
000000A6:   JUMP
000000A7:   JUMPDEST "A7"
000000A8:   PUSH0
000000A9:   PUSH0
000000AA:   PUSH1 "40"
000000AC:   DUP4
000000AD:   DUP6
000000AE:   SUB
000000AF:   SLT
000000B0:   ISZERO
000000B1:   PUSH1 "B7"
000000B3:   JUMPI
000000B4:   PUSH0
000000B5:   PUSH0
000000B6:   REVERT
000000B7:   JUMPDEST "B7"
000000B8:   POP
000000B9:   POP
000000BA:   DUP1
000000BB:   CALLDATALOAD
000000BC:   SWAP3
000000BD:   PUSH1 "20"
000000BF:   SWAP1
000000C0:   SWAP2
000000C1:   ADD
000000C2:   CALLDATALOAD
000000C3:   SWAP2
000000C4:   POP
000000C5:   JUMP
000000C6:   JUMPDEST "C6"
000000C7:   DUP1
000000C8:   DUP3
000000C9:   MUL
000000CA:   DUP2
000000CB:   ISZERO
000000CC:   DUP3
000000CD:   DUP3
000000CE:   DIV
000000CF:   DUP5
000000D0:   EQ
000000D1:   OR
000000D2:   PUSH1 "91"
000000D4:   JUMPI
000000D5:   PUSH4 "4E487B71"
000000DA:   PUSH1 "E0"
000000DC:   SHL
000000DD:   PUSH0
000000DE:   MSTORE
000000DF:   PUSH1 "11"
000000E1:   PUSH1 "04"
000000E3:   MSTORE
000000E4:   PUSH1 "24"
000000E6:   PUSH0
000000E7:   REVERT
000000E8:   INVALID
// IPFS/VER
00000000:   INFO "A2"
00000001:   INFO "64"
00000002:   INFO "ipfs5822"
00000003:   INFO "1220C494C3E0AEE574078AFA2F9E6BD4B5FBFE616DDAE6C7BED18CEF7732B2E5848E"
00000004:   INFO "64"
00000005:   INFO "solc43"
00000006:   INFO "00081C"
00000007:   INFO "00"
00000008:   INFO "33"

-- +-----------------+ --
-- | Cut into States | --
-- +-----------------+ --

[PUSH1 "80",PUSH1 "40",MSTORE]
[CALLVALUE,DUP1]
[ISZERO,PUSH1 "0E",JUMPI]
[PUSH0,PUSH0,REVERT]
[JUMPDEST "E"]
[POP]
[PUSH2 "01A1",DUP1]
[PUSH2 "001C",PUSH0,CODECOPY]
[PUSH0,RETURN]
[INVALID]
[PUSH1 "80",PUSH1 "40",MSTORE]
[CALLVALUE,DUP1]
[ISZERO,PUSH2 "000F",JUMPI]
[PUSH0,PUSH0,REVERT]
[JUMPDEST "F"]
[POP]
[PUSH1 "04",CALLDATASIZE,LT,PUSH2 "0034",JUMPI]
[PUSH0,CALLDATALOAD,PUSH1 "E0",SHR,DUP1]
[PUSH4 "165C4A16",EQ,PUSH2 "0038",JUMPI]
[DUP1]
[PUSH4 "C04F01FC",EQ,PUSH2 "005D",JUMPI]
[JUMPDEST "34"]
[PUSH0,PUSH0,REVERT]
[JUMPDEST "38"]
[PUSH2 "004B",PUSH2 "0046",CALLDATASIZE,PUSH1 "04",PUSH2 "0134",JUMP]
[JUMPDEST "46"]
[PUSH2 "0070",JUMP]
[JUMPDEST "4B"]
[PUSH1 "40",MLOAD,SWAP1]
[DUP2]
[MSTORE]
[PUSH1 "20",ADD,PUSH1 "40",MLOAD,DUP1]
[SWAP2]
[SUB,SWAP1]
[RETURN]
[JUMPDEST "5D"]
[PUSH2 "004B",PUSH2 "006B",CALLDATASIZE,PUSH1 "04",PUSH2 "0134",JUMP]
[JUMPDEST "6B"]
[PUSH2 "00F3",JUMP]
[JUMPDEST "70"]
[PUSH1 "40",MLOAD,PUSH4 "32292B27",PUSH1 "E2",SHL,DUP2]
[MSTORE]
[PUSH1 "04",DUP2]
[ADD,DUP4]
[SWAP1]
[MSTORE]
[PUSH1 "24",DUP2]
[ADD,DUP3]
[SWAP1]
[MSTORE]
[PUSH0,SWAP1]
[PUSH20 "__$1F0C349BDE6EBFCAE8B9C6F081C0EA69B5$__",SWAP1]
[PUSH4 "C8A4AC9C",SWAP1]
[PUSH1 "44",ADD]
[JUMPDEST "AD"]
[PUSH1 "20",PUSH1 "40",MLOAD,DUP1]
[DUP4]
[SUB,DUP2]
[DUP7,GAS,DELEGATECALL,ISZERO,DUP1]
[ISZERO,PUSH2 "00C8",JUMPI]
[RETURNDATASIZE,PUSH0,PUSH0,RETURNDATACOPY,RETURNDATASIZE,PUSH0,REVERT]
[JUMPDEST "C8"]
[POP]
[POP]
[POP]
[POP]
[PUSH1 "40",MLOAD,RETURNDATASIZE,PUSH1 "1F",NOT,PUSH1 "1F",DUP3]
[ADD,AND,DUP3]
[ADD,DUP1]
[PUSH1 "40",MSTORE]
[POP]
[DUP2]
[ADD,SWAP1]
[PUSH2 "00EC",SWAP2]
[SWAP1]
[PUSH2 "0154",JUMP]
[JUMPDEST "EC"]
[SWAP4]
[SWAP3]
[POP]
[POP]
[POP]
[JUMP]
[JUMPDEST "F3"]
[PUSH1 "40",MLOAD,PUSH4 "2E4C697F",PUSH1 "E0",SHL,DUP2]
[MSTORE]
[PUSH1 "04",DUP2]
[ADD,DUP4]
[SWAP1]
[MSTORE]
[PUSH1 "24",DUP2]
[ADD,DUP3]
[SWAP1]
[MSTORE]
[PUSH0,SWAP1]
[PUSH20 "__$1F0C349BDE6EBFCAE8B9C6F081C0EA69B5$__",SWAP1]
[PUSH4 "2E4C697F",SWAP1]
[PUSH1 "44",ADD,PUSH2 "00AD",JUMP]
[JUMPDEST "134"]
[PUSH0,PUSH0,PUSH1 "40",DUP4]
[DUP6,SUB,SLT,ISZERO,PUSH2 "0145",JUMPI]
[PUSH0,PUSH0,REVERT]
[JUMPDEST "145"]
[POP]
[POP]
[DUP1]
[CALLDATALOAD,SWAP3]
[PUSH1 "20",SWAP1]
[SWAP2]
[ADD,CALLDATALOAD,SWAP2]
[POP]
[JUMP]
[JUMPDEST "154"]
[PUSH0,PUSH1 "20",DUP3]
[DUP5]
[SUB,SLT,ISZERO,PUSH2 "0164",JUMPI]
[PUSH0,PUSH0,REVERT]
[JUMPDEST "164"]
[POP]
[MLOAD,SWAP2]
[SWAP1]
[POP]
[JUMP]
[INVALID]
[INFO "A2",INFO "64",INFO "ipfs5822",INFO "12208CB86D445EA9A119AA60D3747DE2EC6B827261D451D51E9FDF712A565C0574FE",INFO "64",INFO "solc43",INFO "00081C",INFO "00",INFO "33"]
[INVALID]
[PUSH2 "011E",PUSH2 "0034",PUSH1 "0B",DUP3]
[DUP3]
[DUP3]
[CODECOPY]
[DUP1]
[MLOAD,PUSH0,BYTE,PUSH1 "73",EQ,PUSH1 "28",JUMPI]
[PUSH4 "4E487B71",PUSH1 "E0",SHL,PUSH0,MSTORE]
[PUSH0,PUSH1 "04",MSTORE]
[PUSH1 "24",PUSH0,REVERT]
[JUMPDEST "28"]
[ADDRESS,PUSH0,MSTORE]
[PUSH1 "73",DUP2]
[MSTORE8,DUP3]
[DUP2]
[RETURN]
[INVALID]
[PUSH20 "0000000000000000000000000000000000000000",ADDRESS,EQ,PUSH1 "80",PUSH1 "40",MSTORE]
[PUSH1 "04",CALLDATASIZE,LT,PUSH1 "3C",JUMPI]
[PUSH0,CALLDATALOAD,PUSH1 "E0",SHR,DUP1]
[PUSH4 "2E4C697F",EQ,PUSH1 "40",JUMPI]
[DUP1]
[PUSH4 "C8A4AC9C",EQ,PUSH1 "61",JUMPI]
[JUMPDEST "3C"]
[PUSH0,PUSH0,REVERT]
[JUMPDEST "40"]
[PUSH1 "4F",PUSH1 "4B",CALLDATASIZE,PUSH1 "04",PUSH1 "A7",JUMP]
[JUMPDEST "4B"]
[PUSH1 "70",JUMP]
[JUMPDEST "4F"]
[PUSH1 "40",MLOAD,SWAP1]
[DUP2]
[MSTORE]
[PUSH1 "20",ADD,PUSH1 "40",MLOAD,DUP1]
[SWAP2]
[SUB,SWAP1]
[RETURN]
[JUMPDEST "61"]
[PUSH1 "4F",PUSH1 "6C",CALLDATASIZE,PUSH1 "04",PUSH1 "A7",JUMP]
[JUMPDEST "6C"]
[PUSH1 "97",JUMP]
[JUMPDEST "70"]
[PUSH0,PUSH1 "01",DUP2]
[JUMPDEST "75"]
[DUP4]
[DUP2]
[LT,ISZERO,PUSH1 "8D",JUMPI]
[PUSH1 "84",DUP6,DUP4]
[PUSH1 "C6",JUMP]
[JUMPDEST "84"]
[SWAP2]
[POP]
[PUSH1 "01",ADD,PUSH1 "75",JUMP]
[JUMPDEST "8D"]
[POP]
[SWAP1]
[POP]
[JUMPDEST "91"]
[SWAP3]
[SWAP2]
[POP]
[POP]
[JUMP]
[JUMPDEST "97"]
[PUSH0,PUSH1 "A0",DUP3]
[DUP5]
[PUSH1 "C6",JUMP]
[JUMPDEST "A0"]
[SWAP4]
[SWAP3]
[POP]
[POP]
[POP]
[JUMP]
[JUMPDEST "A7"]
[PUSH0,PUSH0,PUSH1 "40",DUP4]
[DUP6,SUB,SLT,ISZERO,PUSH1 "B7",JUMPI]
[PUSH0,PUSH0,REVERT]
[JUMPDEST "B7"]
[POP]
[POP]
[DUP1]
[CALLDATALOAD,SWAP3]
[PUSH1 "20",SWAP1]
[SWAP2]
[ADD,CALLDATALOAD,SWAP2]
[POP]
[JUMP]
[JUMPDEST "C6"]
[DUP1]
[DUP3]
[MUL,DUP2]
[ISZERO,DUP3]
[DUP3]
[DIV,DUP5]
[EQ,OR,PUSH1 "91",JUMPI]
[PUSH4 "4E487B71",PUSH1 "E0",SHL,PUSH0,MSTORE]
[PUSH1 "11",PUSH1 "04",MSTORE]
[PUSH1 "24",PUSH0,REVERT]
[INVALID]
[INFO "A2",INFO "64",INFO "ipfs5822",INFO "1220C494C3E0AEE574078AFA2F9E6BD4B5FBFE616DDAE6C7BED18CEF7732B2E5848E",INFO "64",INFO "solc43",INFO "00081C",INFO "00",INFO "33"]

-- +-----------+ --
-- | Decompile | --
-- +-----------+ --

[
*-( SEQ
    *-( MSTORE
    |   +-  PUSH1 "80"
    |   +-  PUSH1 "40"
    +-  CALLVALUE
    +-  DUP1
,
*-( SEQ
    *-( JUMPI
    |   +-  ISZERO
    |   |   +-  ARG 1
    |   +-  PUSH1 "0E"
    *-( REVERT
        +-  PUSH0
        +-  PUSH0
,
*-( SEQ
    *-( JUMPDEST "E"
    *-( POP
    |   +-  ARG 1
    +-  PUSH2 "01A1"
    +-  DUP1
    *-( CODECOPY
    |   +-  ARG 1
    |   +-  PUSH2 "001C"
    |   +-  PUSH0
    *-( RETURN
    |   +-  ARG 1
    |   +-  PUSH0
    *-( INVALID
,
*-( SEQ
    *-( MSTORE
    |   +-  PUSH1 "80"
    |   +-  PUSH1 "40"
    +-  CALLVALUE
    +-  DUP1
,
*-( SEQ
    *-( JUMPI
    |   +-  ISZERO
    |   |   +-  ARG 1
    |   +-  PUSH2 "000F"
    *-( REVERT
        +-  PUSH0
        +-  PUSH0
,
*-( SEQ
    *-( JUMPDEST "F"
    *-( POP
        +-  ARG 1
,
*-( SEQ
    *-( JUMPI
    |   +-  LT
    |   |   +-  PUSH1 "04"
    |   |   +-  CALLDATASIZE
    |   +-  PUSH2 "0034"
    +-  SHR
    |   +-  CALLDATALOAD
    |   |   +-  PUSH0
    |   +-  PUSH1 "E0"
    +-  DUP1
,
*-( SEQ
    *-( JUMPI
    |   +-  EQ
    |   |   +-  ARG 1
    |   |   +-  PUSH4 "165C4A16"
    |   +-  PUSH2 "0038"
    +-  DUP1
,
*-( SEQ
    *-( JUMPI
        +-  EQ
        |   +-  ARG 1
        |   +-  PUSH4 "C04F01FC"
        +-  PUSH2 "005D"
,
*-( SEQ
    *-( JUMPDEST "34"
    *-( REVERT
        +-  PUSH0
        +-  PUSH0
,
*-( SEQ
    *-( JUMPDEST "38"
    +-  PUSH2 "004B"
    +-  PUSH2 "0046"
    +-  CALLDATASIZE
    +-  PUSH1 "04"
    *-( JUMP
        +-  PUSH2 "0134"
,
*-( SEQ
    *-( JUMPDEST "46"
    *-( JUMP
        +-  PUSH2 "0070"
,
*-( SEQ
    *-( JUMPDEST "4B"
    +-  MLOAD
    |   +-  PUSH1 "40"
    *-( SWAP1
    +-  DUP2
    *-( MSTORE
    |   +-  ARG 2
    |   +-  ARG 1
    +-  ADD
    |   +-  ARG 1
    |   +-  PUSH1 "20"
    +-  MLOAD
    |   +-  PUSH1 "40"
    +-  DUP1
    *-( SWAP2
    +-  SUB
    |   +-  ARG 2
    |   +-  ARG 1
    *-( SWAP1
    *-( RETURN
        +-  ARG 2
        +-  ARG 1
,
*-( SEQ
    *-( JUMPDEST "5D"
    +-  PUSH2 "004B"
    +-  PUSH2 "006B"
    +-  CALLDATASIZE
    +-  PUSH1 "04"
    *-( JUMP
        +-  PUSH2 "0134"
,
*-( SEQ
    *-( JUMPDEST "6B"
    *-( JUMP
        +-  PUSH2 "00F3"
,
*-( SEQ
    *-( JUMPDEST "70"
    +-  MLOAD
    |   +-  PUSH1 "40"
    +-  SHL
    |   +-  PUSH4 "32292B27"
    |   +-  PUSH1 "E2"
    +-  DUP2
    *-( MSTORE
    |   +-  ARG 2
    |   +-  ARG 1
    +-  PUSH1 "04"
    +-  DUP2
    +-  ADD
    |   +-  ARG 2
    |   +-  ARG 1
    +-  DUP4
    *-( SWAP1
    *-( MSTORE
    |   +-  ARG 2
    |   +-  ARG 1
    +-  PUSH1 "24"
    +-  DUP2
    +-  ADD
    |   +-  ARG 2
    |   +-  ARG 1
    +-  DUP3
    *-( SWAP1
    *-( MSTORE
    |   +-  ARG 2
    |   +-  ARG 1
    +-  PUSH0
    *-( SWAP1
    +-  PUSH20 "__$1F0C349BDE6EBFCAE8B9C6F081C0EA69B5$__"
    *-( SWAP1
    +-  PUSH4 "C8A4AC9C"
    *-( SWAP1
    +-  ADD
        +-  ARG 1
        +-  PUSH1 "44"
,
*-( SEQ
    *-( JUMPDEST "AD"
    +-  PUSH1 "20"
    +-  MLOAD
    |   +-  PUSH1 "40"
    +-  DUP1
    +-  DUP4
    +-  SUB
    |   +-  ARG 2
    |   +-  ARG 1
    +-  DUP2
    +-  ISZERO
    |   +-  DELEGATECALL
    |       +-  ARG 4
    |       +-  ARG 3
    |       +-  ARG 2
    |       +-  ARG 1
    |       +-  DUP7
    |       +-  GAS
    +-  DUP1
,
*-( SEQ
    *-( JUMPI
    |   +-  ISZERO
    |   |   +-  ARG 1
    |   +-  PUSH2 "00C8"
    *-( RETURNDATACOPY
    |   +-  RETURNDATASIZE
    |   +-  PUSH0
    |   +-  PUSH0
    *-( REVERT
        +-  RETURNDATASIZE
        +-  PUSH0
,
*-( SEQ
    *-( JUMPDEST "C8"
    *-( POP
    |   +-  ARG 1
    *-( POP
    |   +-  ARG 1
    *-( POP
    |   +-  ARG 1
    *-( POP
    |   +-  ARG 1
    +-  MLOAD
    |   +-  PUSH1 "40"
    +-  RETURNDATASIZE
    +-  NOT
    |   +-  PUSH1 "1F"
    +-  PUSH1 "1F"
    +-  DUP3
    +-  AND
    |   +-  ARG 3
    |   +-  ADD
    |       +-  ARG 2
    |       +-  ARG 1
    +-  DUP3
    +-  ADD
    |   +-  ARG 2
    |   +-  ARG 1
    +-  DUP1
    *-( MSTORE
    |   +-  ARG 1
    |   +-  PUSH1 "40"
    *-( POP
    |   +-  ARG 1
    +-  DUP2
    +-  ADD
    |   +-  ARG 2
    |   +-  ARG 1
    *-( SWAP1
    +-  PUSH2 "00EC"
    *-( SWAP2
    *-( SWAP1
    *-( JUMP
        +-  PUSH2 "0154"
,
*-( SEQ
    *-( JUMPDEST "EC"
    *-( SWAP4
    *-( SWAP3
    *-( POP
    |   +-  ARG 1
    *-( POP
    |   +-  ARG 1
    *-( POP
    |   +-  ARG 1
    *-( JUMP
        +-  ARG 1
,
*-( SEQ
    *-( JUMPDEST "F3"
    +-  MLOAD
    |   +-  PUSH1 "40"
    +-  SHL
    |   +-  PUSH4 "2E4C697F"
    |   +-  PUSH1 "E0"
    +-  DUP2
    *-( MSTORE
    |   +-  ARG 2
    |   +-  ARG 1
    +-  PUSH1 "04"
    +-  DUP2
    +-  ADD
    |   +-  ARG 2
    |   +-  ARG 1
    +-  DUP4
    *-( SWAP1
    *-( MSTORE
    |   +-  ARG 2
    |   +-  ARG 1
    +-  PUSH1 "24"
    +-  DUP2
    +-  ADD
    |   +-  ARG 2
    |   +-  ARG 1
    +-  DUP3
    *-( SWAP1
    *-( MSTORE
    |   +-  ARG 2
    |   +-  ARG 1
    +-  PUSH0
    *-( SWAP1
    +-  PUSH20 "__$1F0C349BDE6EBFCAE8B9C6F081C0EA69B5$__"
    *-( SWAP1
    +-  PUSH4 "2E4C697F"
    *-( SWAP1
    +-  ADD
    |   +-  ARG 1
    |   +-  PUSH1 "44"
    *-( JUMP
        +-  PUSH2 "00AD"
,
*-( SEQ
    *-( JUMPDEST "134"
    +-  PUSH0
    +-  PUSH0
    +-  PUSH1 "40"
    +-  DUP4
,
*-( SEQ
    *-( JUMPI
    |   +-  ISZERO
    |   |   +-  SLT
    |   |       +-  ARG 2
    |   |       +-  SUB
    |   |           +-  ARG 1
    |   |           +-  DUP6
    |   +-  PUSH2 "0145"
    *-( REVERT
        +-  PUSH0
        +-  PUSH0
,
*-( SEQ
    *-( JUMPDEST "145"
    *-( POP
    |   +-  ARG 1
    *-( POP
    |   +-  ARG 1
    +-  DUP1
    +-  CALLDATALOAD
    |   +-  ARG 1
    *-( SWAP3
    +-  PUSH1 "20"
    *-( SWAP1
    *-( SWAP2
    +-  CALLDATALOAD
    |   +-  ADD
    |       +-  ARG 2
    |       +-  ARG 1
    *-( SWAP2
    *-( POP
    |   +-  ARG 1
    *-( JUMP
        +-  ARG 1
,
*-( SEQ
    *-( JUMPDEST "154"
    +-  PUSH0
    +-  PUSH1 "20"
    +-  DUP3
    +-  DUP5
,
*-( SEQ
    *-( JUMPI
    |   +-  ISZERO
    |   |   +-  SLT
    |   |       +-  ARG 3
    |   |       +-  SUB
    |   |           +-  ARG 2
    |   |           +-  ARG 1
    |   +-  PUSH2 "0164"
    *-( REVERT
        +-  PUSH0
        +-  PUSH0
,
*-( SEQ
    *-( JUMPDEST "164"
    *-( POP
    |   +-  ARG 1
    +-  MLOAD
    |   +-  ARG 1
    *-( SWAP2
    *-( SWAP1
    *-( POP
    |   +-  ARG 1
    *-( JUMP
    |   +-  ARG 1
    *-( INVALID
,
*-( SEQ
    *-( INVALID
,
*-( SEQ
    +-  PUSH2 "011E"
    +-  PUSH2 "0034"
    +-  PUSH1 "0B"
    +-  DUP3
    +-  DUP3
    +-  DUP3
    *-( CODECOPY
    |   +-  ARG 3
    |   +-  ARG 2
    |   +-  ARG 1
    +-  DUP1
,
*-( SEQ
    *-( JUMPI
    |   +-  EQ
    |   |   +-  BYTE
    |   |   |   +-  MLOAD
    |   |   |   |   +-  ARG 1
    |   |   |   +-  PUSH0
    |   |   +-  PUSH1 "73"
    |   +-  PUSH1 "28"
    *-( MSTORE
    |   +-  SHL
    |   |   +-  PUSH4 "4E487B71"
    |   |   +-  PUSH1 "E0"
    |   +-  PUSH0
    *-( MSTORE
    |   +-  PUSH0
    |   +-  PUSH1 "04"
    *-( REVERT
        +-  PUSH1 "24"
        +-  PUSH0
,
*-( SEQ
    *-( JUMPDEST "28"
    *-( MSTORE
    |   +-  ADDRESS
    |   +-  PUSH0
    +-  PUSH1 "73"
    +-  DUP2
    *-( MSTORE8
    |   +-  ARG 2
    |   +-  ARG 1
    +-  DUP3
    +-  DUP2
    *-( RETURN
    |   +-  ARG 2
    |   +-  ARG 1
    *-( INVALID
,
*-( SEQ
    +-  EQ
    |   +-  PUSH20 "0000000000000000000000000000000000000000"
    |   +-  ADDRESS
    *-( MSTORE
        +-  PUSH1 "80"
        +-  PUSH1 "40"
,
*-( SEQ
    *-( JUMPI
    |   +-  LT
    |   |   +-  PUSH1 "04"
    |   |   +-  CALLDATASIZE
    |   +-  PUSH1 "3C"
    +-  SHR
    |   +-  CALLDATALOAD
    |   |   +-  PUSH0
    |   +-  PUSH1 "E0"
    +-  DUP1
,
*-( SEQ
    *-( JUMPI
    |   +-  EQ
    |   |   +-  ARG 1
    |   |   +-  PUSH4 "2E4C697F"
    |   +-  PUSH1 "40"
    +-  DUP1
,
*-( SEQ
    *-( JUMPI
        +-  EQ
        |   +-  ARG 1
        |   +-  PUSH4 "C8A4AC9C"
        +-  PUSH1 "61"
,
*-( SEQ
    *-( JUMPDEST "3C"
    *-( REVERT
        +-  PUSH0
        +-  PUSH0
,
*-( SEQ
    *-( JUMPDEST "40"
    +-  PUSH1 "4F"
    +-  PUSH1 "4B"
    +-  CALLDATASIZE
    +-  PUSH1 "04"
    *-( JUMP
        +-  PUSH1 "A7"
,
*-( SEQ
    *-( JUMPDEST "4B"
    *-( JUMP
        +-  PUSH1 "70"
,
*-( SEQ
    *-( JUMPDEST "4F"
    +-  MLOAD
    |   +-  PUSH1 "40"
    *-( SWAP1
    +-  DUP2
    *-( MSTORE
    |   +-  ARG 2
    |   +-  ARG 1
    +-  ADD
    |   +-  ARG 1
    |   +-  PUSH1 "20"
    +-  MLOAD
    |   +-  PUSH1 "40"
    +-  DUP1
    *-( SWAP2
    +-  SUB
    |   +-  ARG 2
    |   +-  ARG 1
    *-( SWAP1
    *-( RETURN
        +-  ARG 2
        +-  ARG 1
,
*-( SEQ
    *-( JUMPDEST "61"
    +-  PUSH1 "4F"
    +-  PUSH1 "6C"
    +-  CALLDATASIZE
    +-  PUSH1 "04"
    *-( JUMP
        +-  PUSH1 "A7"
,
*-( SEQ
    *-( JUMPDEST "6C"
    *-( JUMP
        +-  PUSH1 "97"
,
*-( SEQ
    *-( JUMPDEST "70"
    +-  PUSH0
    +-  PUSH1 "01"
    +-  DUP2
,
*-( SEQ
    *-( JUMPDEST "75"
    +-  DUP4
    +-  DUP2
,
*-( SEQ
    *-( JUMPI
    |   +-  ISZERO
    |   |   +-  LT
    |   |       +-  ARG 2
    |   |       +-  ARG 1
    |   +-  PUSH1 "8D"
    +-  PUSH1 "84"
    +-  DUP6
    +-  DUP4
    *-( JUMP
        +-  PUSH1 "C6"
,
*-( SEQ
    *-( JUMPDEST "84"
    *-( SWAP2
    *-( POP
    |   +-  ARG 1
    +-  ADD
    |   +-  ARG 1
    |   +-  PUSH1 "01"
    *-( JUMP
        +-  PUSH1 "75"
,
*-( SEQ
    *-( JUMPDEST "8D"
    *-( POP
    |   +-  ARG 1
    *-( SWAP1
    *-( POP
        +-  ARG 1
,
*-( SEQ
    *-( JUMPDEST "91"
    *-( SWAP3
    *-( SWAP2
    *-( POP
    |   +-  ARG 1
    *-( POP
    |   +-  ARG 1
    *-( JUMP
        +-  ARG 1
,
*-( SEQ
    *-( JUMPDEST "97"
    +-  PUSH0
    +-  PUSH1 "A0"
    +-  DUP3
    +-  DUP5
    *-( JUMP
        +-  PUSH1 "C6"
,
*-( SEQ
    *-( JUMPDEST "A0"
    *-( SWAP4
    *-( SWAP3
    *-( POP
    |   +-  ARG 1
    *-( POP
    |   +-  ARG 1
    *-( POP
    |   +-  ARG 1
    *-( JUMP
        +-  ARG 1
,
*-( SEQ
    *-( JUMPDEST "A7"
    +-  PUSH0
    +-  PUSH0
    +-  PUSH1 "40"
    +-  DUP4
,
*-( SEQ
    *-( JUMPI
    |   +-  ISZERO
    |   |   +-  SLT
    |   |       +-  ARG 2
    |   |       +-  SUB
    |   |           +-  ARG 1
    |   |           +-  DUP6
    |   +-  PUSH1 "B7"
    *-( REVERT
        +-  PUSH0
        +-  PUSH0
,
*-( SEQ
    *-( JUMPDEST "B7"
    *-( POP
    |   +-  ARG 1
    *-( POP
    |   +-  ARG 1
    +-  DUP1
    +-  CALLDATALOAD
    |   +-  ARG 1
    *-( SWAP3
    +-  PUSH1 "20"
    *-( SWAP1
    *-( SWAP2
    +-  CALLDATALOAD
    |   +-  ADD
    |       +-  ARG 2
    |       +-  ARG 1
    *-( SWAP2
    *-( POP
    |   +-  ARG 1
    *-( JUMP
        +-  ARG 1
,
*-( SEQ
    *-( JUMPDEST "C6"
    +-  DUP1
    +-  DUP3
    +-  MUL
    |   +-  ARG 2
    |   +-  ARG 1
    +-  DUP2
    +-  ISZERO
    |   +-  ARG 1
    +-  DUP3
    +-  DUP3
    +-  SUB
    |   +-  ARG 2
    |   +-  ARG 1
    +-  DUP5
,
*-( SEQ
    *-( JUMPI
    |   +-  OR
    |   |   +-  ARG 3
    |   |   +-  EQ
    |   |       +-  ARG 2
    |   |       +-  ARG 1
    |   +-  PUSH1 "91"
    *-( MSTORE
    |   +-  SHL
    |   |   +-  PUSH4 "4E487B71"
    |   |   +-  PUSH1 "E0"
    |   +-  PUSH0
    *-( MSTORE
    |   +-  PUSH1 "11"
    |   +-  PUSH1 "04"
    *-( REVERT
    |   +-  PUSH1 "24"
    |   +-  PUSH0
    *-( INVALID
,
*-( SEQ
]

-- +-------------+ --
-- |    GCLL     | --
-- +-------------+ --

M[0x40] := 0x80;
Callvalue;
Stk[1]
If (Arg[1])==0 Goto 0x0E;
Revert(0x0, 0x0)
<< label: E >>
Pop();
0x01A1;
Stk[1];
Codecopy(to:0x0,from:0x001C,size:Arg[1]);
Return(0x0, Arg[1]);

M[0x40] := 0x80;
Callvalue;
Stk[1]
If (Arg[1])==0 Goto 0x000F;
Revert(0x0, 0x0)
<< label: F >>
Pop()
If 0x04>Calldatasize Goto 0x0034;
0xE0>>calldataload(0x0);
Stk[1]
If Arg[1]==0x165C4A16 Goto 0x0038;
Stk[1]
If Arg[1]==0xC04F01FC Goto 0x005D
<< label: 34 >>
Revert(0x0, 0x0)
<< label: 38 >>
0x004B;
0x0046;
Calldatasize;
0x04;
Goto 0x0134
<< label: 46 >>
Goto 0x0070
<< label: 4B >>
M[0x40];
Swap1;
Stk[2];
M[Arg[1]] := Arg[2];
Arg[1]+0x20;
M[0x40];
Stk[1];
Swap2;
Arg[2]-Arg[1];
Swap1;
Return(Arg[1], Arg[2])
<< label: 5D >>
0x004B;
0x006B;
Calldatasize;
0x04;
Goto 0x0134
<< label: 6B >>
Goto 0x00F3
<< label: 70 >>
M[0x40];
0xE2<<0x32292B27;
Stk[2];
M[Arg[1]] := Arg[2];
0x04;
Stk[2];
Arg[2]+Arg[1];
Stk[4];
Swap1;
M[Arg[1]] := Arg[2];
0x24;
Stk[2];
Arg[2]+Arg[1];
Stk[3];
Swap1;
M[Arg[1]] := Arg[2];
0x0;
Swap1;
0x__$1F0C349BDE6EBFCAE8B9C6F081C0EA69B5$__;
Swap1;
0xC8A4AC9C;
Swap1;
Arg[1]+0x44
<< label: AD >>
0x20;
M[0x40];
Stk[1];
Stk[4];
Arg[2]-Arg[1];
Stk[2];
(delegatecall(Gas,Stk[7],Arg[1],Arg[2],Arg[3],Arg[4]))==0;
Stk[1]
If (Arg[1])==0 Goto 0x00C8;
Returndatacopy(to:0x0,from:0x0,size:Returndatasize);
Revert(0x0, Returndatasize)
<< label: C8 >>
Pop();
Pop();
Pop();
Pop();
M[0x40];
Returndatasize;
~0x1F;
0x1F;
Stk[3];
Arg[3]&Arg[2]+Arg[1];
Stk[3];
Arg[2]+Arg[1];
Stk[1];
M[0x40] := Arg[1];
Pop();
Stk[2];
Arg[2]+Arg[1];
Swap1;
0x00EC;
Swap2;
Swap1;
Goto 0x0154
<< label: EC >>
Swap4;
Swap3;
Pop();
Pop();
Pop();
Goto Arg[1]
<< label: F3 >>
M[0x40];
0xE0<<0x2E4C697F;
Stk[2];
M[Arg[1]] := Arg[2];
0x04;
Stk[2];
Arg[2]+Arg[1];
Stk[4];
Swap1;
M[Arg[1]] := Arg[2];
0x24;
Stk[2];
Arg[2]+Arg[1];
Stk[3];
Swap1;
M[Arg[1]] := Arg[2];
0x0;
Swap1;
0x__$1F0C349BDE6EBFCAE8B9C6F081C0EA69B5$__;
Swap1;
0x2E4C697F;
Swap1;
Arg[1]+0x44;
Goto 0x00AD
<< label: 134 >>
0x0;
0x0;
0x40;
Stk[4]
If (Arg[2]<'Arg[1]-Stk[6])==0 Goto 0x0145;
Revert(0x0, 0x0)
<< label: 145 >>
Pop();
Pop();
Stk[1];
calldataload(Arg[1]);
Swap3;
0x20;
Swap1;
Swap2;
calldataload(Arg[2]+Arg[1]);
Swap2;
Pop();
Goto Arg[1]
<< label: 154 >>
0x0;
0x20;
Stk[3];
Stk[5]
If (Arg[3]<'Arg[2]-Arg[1])==0 Goto 0x0164;
Revert(0x0, 0x0)
<< label: 164 >>
Pop();
M[Arg[1]];
Swap2;
Swap1;
Pop();
Goto Arg[1];


0x011E;
0x0034;
0x0B;
Stk[3];
Stk[3];
Stk[3];
Codecopy(to:Arg[1],from:Arg[2],size:Arg[3]);
Stk[1]
If 0x0{M[Arg[1]]}==0x73 Goto 0x28;
M[0x0] := 0xE0<<0x4E487B71;
M[0x04] := 0x0;
Revert(0x0, 0x24)
<< label: 28 >>
M[0x0] := Address;
0x73;
Stk[2];
M[Arg[1]] := Arg[2];
Stk[3];
Stk[2];
Return(Arg[1], Arg[2]);

0x0000000000000000000000000000000000000000==Address;
M[0x40] := 0x80
If 0x04>Calldatasize Goto 0x3C;
0xE0>>calldataload(0x0);
Stk[1]
If Arg[1]==0x2E4C697F Goto 0x40;
Stk[1]
If Arg[1]==0xC8A4AC9C Goto 0x61
<< label: 3C >>
Revert(0x0, 0x0)
<< label: 40 >>
0x4F;
0x4B;
Calldatasize;
0x04;
Goto 0xA7
<< label: 4B >>
Goto 0x70
<< label: 4F >>
M[0x40];
Swap1;
Stk[2];
M[Arg[1]] := Arg[2];
Arg[1]+0x20;
M[0x40];
Stk[1];
Swap2;
Arg[2]-Arg[1];
Swap1;
Return(Arg[1], Arg[2])
<< label: 61 >>
0x4F;
0x6C;
Calldatasize;
0x04;
Goto 0xA7
<< label: 6C >>
Goto 0x97
<< label: 70 >>
0x0;
0x01;
Stk[2]
<< label: 75 >>
Stk[4];
Stk[2]
If (Arg[2]>Arg[1])==0 Goto 0x8D;
0x84;
Stk[6];
Stk[4];
Goto 0xC6
<< label: 84 >>
Swap2;
Pop();
Arg[1]+0x01;
Goto 0x75
<< label: 8D >>
Pop();
Swap1;
Pop()
<< label: 91 >>
Swap3;
Swap2;
Pop();
Pop();
Goto Arg[1]
<< label: 97 >>
0x0;
0xA0;
Stk[3];
Stk[5];
Goto 0xC6
<< label: A0 >>
Swap4;
Swap3;
Pop();
Pop();
Pop();
Goto Arg[1]
<< label: A7 >>
0x0;
0x0;
0x40;
Stk[4]
If (Arg[2]<'Arg[1]-Stk[6])==0 Goto 0xB7;
Revert(0x0, 0x0)
<< label: B7 >>
Pop();
Pop();
Stk[1];
calldataload(Arg[1]);
Swap3;
0x20;
Swap1;
Swap2;
calldataload(Arg[2]+Arg[1]);
Swap2;
Pop();
Goto Arg[1]
<< label: C6 >>
Stk[1];
Stk[3];
Arg[2]*Arg[1];
Stk[2];
(Arg[1])==0;
Stk[3];
Stk[3];
Arg[2]-Arg[1];
Stk[5]
If Arg[3]|Arg[2]==Arg[1] Goto 0x91;
M[0x0] := 0xE0<<0x4E487B71;
M[0x04] := 0x11;
Revert(0x0, 0x24);



-- +-----------------+ --
-- | GCLL with Nodes | --
-- +-----------------+ --

(Q0):
M[0x40] := 0x80;
Callvalue;
Stk[1]

(Q1):
If (Arg[1])==0 Goto 0x0E;
Revert(0x0, 0x0)

(Q2):
<< label: E >>
Pop();
0x01A1;
Stk[1];
Codecopy(to:0x0,from:0x001C,size:Arg[1]);
Return(0x0, Arg[1]);


(Q3):
M[0x40] := 0x80;
Callvalue;
Stk[1]

(Q4):
If (Arg[1])==0 Goto 0x000F;
Revert(0x0, 0x0)

(Q5):
<< label: F >>
Pop()

(Q6):
If 0x04>Calldatasize Goto 0x0034;
0xE0>>calldataload(0x0);
Stk[1]

(Q7):
If Arg[1]==0x165C4A16 Goto 0x0038;
Stk[1]

(Q8):
If Arg[1]==0xC04F01FC Goto 0x005D

(Q9):
<< label: 34 >>
Revert(0x0, 0x0)

(Q10):
<< label: 38 >>
0x004B;
0x0046;
Calldatasize;
0x04;
Goto 0x0134

(Q11):
<< label: 46 >>
Goto 0x0070

(Q12):
<< label: 4B >>
M[0x40];
Swap1;
Stk[2];
M[Arg[1]] := Arg[2];
Arg[1]+0x20;
M[0x40];
Stk[1];
Swap2;
Arg[2]-Arg[1];
Swap1;
Return(Arg[1], Arg[2])

(Q13):
<< label: 5D >>
0x004B;
0x006B;
Calldatasize;
0x04;
Goto 0x0134

(Q14):
<< label: 6B >>
Goto 0x00F3

(Q15):
<< label: 70 >>
M[0x40];
0xE2<<0x32292B27;
Stk[2];
M[Arg[1]] := Arg[2];
0x04;
Stk[2];
Arg[2]+Arg[1];
Stk[4];
Swap1;
M[Arg[1]] := Arg[2];
0x24;
Stk[2];
Arg[2]+Arg[1];
Stk[3];
Swap1;
M[Arg[1]] := Arg[2];
0x0;
Swap1;
0x__$1F0C349BDE6EBFCAE8B9C6F081C0EA69B5$__;
Swap1;
0xC8A4AC9C;
Swap1;
Arg[1]+0x44

(Q16):
<< label: AD >>
0x20;
M[0x40];
Stk[1];
Stk[4];
Arg[2]-Arg[1];
Stk[2];
(delegatecall(Gas,Stk[7],Arg[1],Arg[2],Arg[3],Arg[4]))==0;
Stk[1]

(Q17):
If (Arg[1])==0 Goto 0x00C8;
Returndatacopy(to:0x0,from:0x0,size:Returndatasize);
Revert(0x0, Returndatasize)

(Q18):
<< label: C8 >>
Pop();
Pop();
Pop();
Pop();
M[0x40];
Returndatasize;
~0x1F;
0x1F;
Stk[3];
Arg[3]&Arg[2]+Arg[1];
Stk[3];
Arg[2]+Arg[1];
Stk[1];
M[0x40] := Arg[1];
Pop();
Stk[2];
Arg[2]+Arg[1];
Swap1;
0x00EC;
Swap2;
Swap1;
Goto 0x0154

(Q19):
<< label: EC >>
Swap4;
Swap3;
Pop();
Pop();
Pop();
Goto Arg[1]

(Q20):
<< label: F3 >>
M[0x40];
0xE0<<0x2E4C697F;
Stk[2];
M[Arg[1]] := Arg[2];
0x04;
Stk[2];
Arg[2]+Arg[1];
Stk[4];
Swap1;
M[Arg[1]] := Arg[2];
0x24;
Stk[2];
Arg[2]+Arg[1];
Stk[3];
Swap1;
M[Arg[1]] := Arg[2];
0x0;
Swap1;
0x__$1F0C349BDE6EBFCAE8B9C6F081C0EA69B5$__;
Swap1;
0x2E4C697F;
Swap1;
Arg[1]+0x44;
Goto 0x00AD

(Q21):
<< label: 134 >>
0x0;
0x0;
0x40;
Stk[4]

(Q22):
If (Arg[2]<'Arg[1]-Stk[6])==0 Goto 0x0145;
Revert(0x0, 0x0)

(Q23):
<< label: 145 >>
Pop();
Pop();
Stk[1];
calldataload(Arg[1]);
Swap3;
0x20;
Swap1;
Swap2;
calldataload(Arg[2]+Arg[1]);
Swap2;
Pop();
Goto Arg[1]

(Q24):
<< label: 154 >>
0x0;
0x20;
Stk[3];
Stk[5]

(Q25):
If (Arg[3]<'Arg[2]-Arg[1])==0 Goto 0x0164;
Revert(0x0, 0x0)

(Q26):
<< label: 164 >>
Pop();
M[Arg[1]];
Swap2;
Swap1;
Pop();
Goto Arg[1];


(Q27):


(Q28):
0x011E;
0x0034;
0x0B;
Stk[3];
Stk[3];
Stk[3];
Codecopy(to:Arg[1],from:Arg[2],size:Arg[3]);
Stk[1]

(Q29):
If 0x0{M[Arg[1]]}==0x73 Goto 0x28;
M[0x0] := 0xE0<<0x4E487B71;
M[0x04] := 0x0;
Revert(0x0, 0x24)

(Q30):
<< label: 28 >>
M[0x0] := Address;
0x73;
Stk[2];
M[Arg[1]] := Arg[2];
Stk[3];
Stk[2];
Return(Arg[1], Arg[2]);


(Q31):
0x0000000000000000000000000000000000000000==Address;
M[0x40] := 0x80

(Q32):
If 0x04>Calldatasize Goto 0x3C;
0xE0>>calldataload(0x0);
Stk[1]

(Q33):
If Arg[1]==0x2E4C697F Goto 0x40;
Stk[1]

(Q34):
If Arg[1]==0xC8A4AC9C Goto 0x61

(Q35):
<< label: 3C >>
Revert(0x0, 0x0)

(Q36):
<< label: 40 >>
0x4F;
0x4B;
Calldatasize;
0x04;
Goto 0xA7

(Q37):
<< label: 4B >>
Goto 0x70

(Q38):
<< label: 4F >>
M[0x40];
Swap1;
Stk[2];
M[Arg[1]] := Arg[2];
Arg[1]+0x20;
M[0x40];
Stk[1];
Swap2;
Arg[2]-Arg[1];
Swap1;
Return(Arg[1], Arg[2])

(Q39):
<< label: 61 >>
0x4F;
0x6C;
Calldatasize;
0x04;
Goto 0xA7

(Q40):
<< label: 6C >>
Goto 0x97

(Q41):
<< label: 70 >>
0x0;
0x01;
Stk[2]

(Q42):
<< label: 75 >>
Stk[4];
Stk[2]

(Q43):
If (Arg[2]>Arg[1])==0 Goto 0x8D;
0x84;
Stk[6];
Stk[4];
Goto 0xC6

(Q44):
<< label: 84 >>
Swap2;
Pop();
Arg[1]+0x01;
Goto 0x75

(Q45):
<< label: 8D >>
Pop();
Swap1;
Pop()

(Q46):
<< label: 91 >>
Swap3;
Swap2;
Pop();
Pop();
Goto Arg[1]

(Q47):
<< label: 97 >>
0x0;
0xA0;
Stk[3];
Stk[5];
Goto 0xC6

(Q48):
<< label: A0 >>
Swap4;
Swap3;
Pop();
Pop();
Pop();
Goto Arg[1]

(Q49):
<< label: A7 >>
0x0;
0x0;
0x40;
Stk[4]

(Q50):
If (Arg[2]<'Arg[1]-Stk[6])==0 Goto 0xB7;
Revert(0x0, 0x0)

(Q51):
<< label: B7 >>
Pop();
Pop();
Stk[1];
calldataload(Arg[1]);
Swap3;
0x20;
Swap1;
Swap2;
calldataload(Arg[2]+Arg[1]);
Swap2;
Pop();
Goto Arg[1]

(Q52):
<< label: C6 >>
Stk[1];
Stk[3];
Arg[2]*Arg[1];
Stk[2];
(Arg[1])==0;
Stk[3];
Stk[3];
Arg[2]-Arg[1];
Stk[5]

(Q53):
If Arg[3]|Arg[2]==Arg[1] Goto 0x91;
M[0x0] := 0xE0<<0x4E487B71;
M[0x04] := 0x11;
Revert(0x0, 0x24);


(Q54):



